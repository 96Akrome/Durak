

Select anastasia simplificado v1:
^SELECT\s+((?:\s*[^\s,]+)(?:(?:\s*,\s*[^\s,*]+)*))\s+FROM\s+([^\s,]+\s*)(?:\s+INNER\sJOIN\s+([^\s]+))?(?:(?:\s+WHERE\s+((?:[^\s\'=]+\s*=(?:(?:\s*\'\s*[^\']+\s*\'|\s*-?\d+(?:.\d+)|\s*[^\s\'=]+))(?:(?:\s+(?:AND|OR)\s+[^\s\'=]+\s*=(?:(?:\s*\'\s*[^\']+\s*\'|\s*-?\d+(?:.\d+)|\s*[^\s\'=]+)))*)?))))?(?:\s+ORDER\sBY\s+([^*\s]+)\s+(ASC|DESC))?;$
cambios v1:
- Regex en WHERE fue factorizado lo m√°s posible
- Se agrego un \s+ antes de (ASC|ESC) para que reciba espacios
- Se elimino un grupo de captura, ahora son 6 grupos los que funcionan:
-- Grupo 1: columnas
-- Grupo 2: Tabla
-- grupo 3: Tabla2 (INNER JOIN)
-- grupo 4: todas las condiciones del where
-- grupo 5: columna de ORDER BY
-- grupo 6: ASC | DESC

Select anastasia simplificado v2:
^SELECT\s+((?:\s*[^\s,]+)(?:(?:\s*,\s*[^\s,*]+)*))\s+FROM\s+([^\s,]+\s*)(?:(?:\s+INNER\sJOIN\s+([^\s]+))?(?:(?:\s+WHERE\s+((?:[^\s\'=]+\s*=(?:(?:\s*\'\s*[^\']+\s*\'|\s*-?\d+(?:.\d+)|\s*[^\s\'=]+))(?:(?:\s+(?:AND|OR)\s+[^\s\'=]+\s*=(?:(?:\s*\'\s*[^\']+\s*\'|\s*-?\d+(?:.\d+)|\s*[^\s\'=]+)))*)?)))))?(?:\s+ORDER\sBY\s+([^*\s]+)\s+(ASC|DESC))?;$
cambios v2:
- Ahora es obligatorio ingresar WHERE si se usa un INNER JOIN

Errores detectados (no se me ocurre aun como solucionarlo :c):
- cuando ingreso columna = columna, estas pueden recibir punto dado que asi lo fuerza el inner join (tabla.columna),
sin embargo, tanto en la version original del regex como en las versiones v1 y v2, el regex permite statements 
de la forma " Tabla.=Blah ", de todas maneras hare que el codigo de python resuelva eso y arroje error de sintaxis

